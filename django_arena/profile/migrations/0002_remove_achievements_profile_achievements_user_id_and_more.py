# Generated by Django 4.2.9 on 2024-04-04 09:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("profile", "0001_initial"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="achievements",
            name="profile",
        ),
        migrations.AddField(
            model_name="achievements",
            name="user_id",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="achievements",
                related_query_name="achievements",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Problem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("tests_file", models.FileField(upload_to="problem/tests/")),
                ("answer_file", models.FileField(upload_to="problem/answer/")),
                (
                    "status",
                    models.TextField(
                        choices=[
                            (1, "hard_reject"),
                            (2, "soft_reject"),
                            (3, "accept"),
                        ]
                    ),
                ),
                ("hard_reject_accumulation", models.IntegerField(default=0)),
                ("day_task", models.BooleanField(default=False)),
                ("week_task", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user_id",
                    models.ManyToManyField(
                        related_name="problem",
                        related_query_name="problem",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
